@model SSLazio.Models.Biglietti

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Biglietti</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdBiglietto)

        <div class="form-group">
            @Html.LabelFor(model => model.IdUtente, "Email Utente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.IdUtente) <!-- Mantieni l'IdUtente nascosto, assegnalo lato server -->
                @User.Identity.Name <!-- Mostro il nome utente loggato -->
            </div>
        </div>
        @if (User.IsInRole("Admin"))
        {

            <div class="form-group">
                @Html.LabelFor(model => model.IdPartita, "IdPartita", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdPartita", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdPartita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdSettore, "IdSettore", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdSettore", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdSettore, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (User.IsInRole("Tifoso"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IdPartita, "IdPartita", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        var idPartita = Model.IdPartita; // Ottieni l'ID della partita dal modello
                    }
                    <select id="IdPartita" name="IdPartita" class="form-control" readonly>
                        <option value="@idPartita" selected>@idPartita</option> <!-- Mostra l'ID della partita -->
                    </select>
                    @Html.ValidationMessageFor(model => model.IdPartita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdSettore, "IdSettore", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        var idSettore = Model.IdSettore; // Ottieni l'ID del settore dal modello
                    }
                    <select id="IdSettore" name="IdSettore" class="form-control" readonly>
                        <option value="@idSettore" selected>@idSettore</option> <!-- Mostra l'ID del settore -->
                    </select>
                    @Html.ValidationMessageFor(model => model.IdSettore, "", new { @class = "text-danger" })
                </div>
            </div>

        }

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.LuogoNascita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LuogoNascita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LuogoNascita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodiceFiscale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodiceFiscale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Residenza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Residenza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Residenza, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Admin"))
        {

            <div class="form-group">
                @Html.LabelFor(model => model.Riduzione, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Riduzione, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Riduzione, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NumeroCarta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumeroCarta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroCarta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Intestatario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Intestatario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Intestatario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Scadenza, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Scadenza, new { htmlAttributes = new { @class = "form-control", id = "dataNascita" } })
                    @Html.ValidationMessageFor(model => model.Scadenza, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Cvc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cvc, new { htmlAttributes = new { @class = "form-control", id = "dataNascita" } })
                    @Html.ValidationMessageFor(model => model.Cvc, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DataPagamento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataPagamento, new { htmlAttributes = new { @class = "form-control", id = "dataNascita" } })
                    @Html.ValidationMessageFor(model => model.DataPagamento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmailDestinatario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailDestinatario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailDestinatario, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (User.IsInRole("Tifoso"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Riduzione, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Riduzione, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Riduzione, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group d-none">
                @Html.LabelFor(model => model.NumeroCarta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumeroCarta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroCarta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group d-none">
                @Html.LabelFor(model => model.Intestatario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Intestatario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Intestatario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group d-none">
                @Html.LabelFor(model => model.Scadenza, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Scadenza, new { htmlAttributes = new { @class = "form-control", id = "dataNascita" } })
                    @Html.ValidationMessageFor(model => model.Scadenza, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group d-none">
                @Html.LabelFor(model => model.Cvc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cvc, new { htmlAttributes = new { @class = "form-control", id = "dataNascita" } })
                    @Html.ValidationMessageFor(model => model.Cvc, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group d-none">
                @Html.LabelFor(model => model.DataPagamento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        string dataPagamentoString = Model.DataPagamento.HasValue ? Model.DataPagamento.Value.ToString("dd/MM/yyyy") : "";
                    }
                    <input type="text" class="form-control" id="dataPagamento" name="DataPagamento" value="@dataPagamentoString" />
                    @Html.ValidationMessageFor(model => model.DataPagamento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailDestinatario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailDestinatario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailDestinatario, "", new { @class = "text-danger" })
                </div>
            </div>

        }



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="ssl-button my-5">Conferma</button>
            </div>
        </div>
    </div>
}

<div>
    <button class="ssl-button">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "text-white text-decoration-none" })
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
