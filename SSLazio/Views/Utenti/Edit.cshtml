﻿@model SSLazio.Models.Utenti

@{
    ViewBag.Title = "Edit";
}
<style>
    .inputCreate {
        color: #8fd4e8;
        border: 2px solid #8fd4e8;
        border-radius: 10px;
        padding: 10px 25px;
        background: transparent;
        max-width: 214px;
    }

        .inputCreate:focus,
        .inputCreate:active {
            box-shadow: 2px 2px 15px #8fd4e8 inset;
            background: transparent;
            color: #8fd4e8;
        }
</style>

<h2 class="my-5">Modifica i tuoi dati</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Utenti</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdUtente)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control inputCreate", placeholder = "Reimposta Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Ruolo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ruolo, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.Ruolo, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Ruolo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ruolo, new { htmlAttributes = new { @class = "form-control inputCreate", @readonly = "readonly", @Value = "Tifoso" } })
                    @Html.ValidationMessageFor(model => model.Ruolo, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        @if (User.Identity.IsAuthenticated)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control inputCreate", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control inputCreate", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataNascita, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataNascita, new { htmlAttributes = new { @class = "form-control inputCreate", required = "required" } })
                    @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LuogoNascita, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LuogoNascita, new { htmlAttributes = new { @class = "form-control inputCreate", required = "required" } })
                    @Html.ValidationMessageFor(model => model.LuogoNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodiceFiscale, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = "form-control inputCreate", required = "required" } })
                    @Html.ValidationMessageFor(model => model.CodiceFiscale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Residenza, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Residenza, new { htmlAttributes = new { @class = "form-control inputCreate", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Residenza, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataNascita, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataNascita, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LuogoNascita, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LuogoNascita, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.LuogoNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodiceFiscale, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.CodiceFiscale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Residenza, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Residenza, new { htmlAttributes = new { @class = "form-control inputCreate" } })
                    @Html.ValidationMessageFor(model => model.Residenza, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="ssl-button my-5" />
            </div>
        </div>
    </div>
}

<div>
    <button class="ssl-button">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "text-white text-decoration-none" })
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}